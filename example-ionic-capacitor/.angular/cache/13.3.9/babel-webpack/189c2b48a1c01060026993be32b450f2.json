{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { checkAvailability, getPlugin } from './common';\n/**\n * @param pluginObj\n * @param methodName\n */\n\nfunction overrideFunction(pluginObj, methodName) {\n  return new Observable(function (observer) {\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n\n    if (availabilityCheck === true) {\n      var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n      pluginInstance_1[methodName] = observer.next.bind(observer);\n      return function () {\n        return pluginInstance_1[methodName] = function () {};\n      };\n    } else {\n      observer.error(availabilityCheck);\n      observer.complete();\n    }\n  });\n}\n/**\n * @param pluginObj\n * @param methodName\n * @param args\n */\n\n\nexport function cordovaFunctionOverride(pluginObj, methodName, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  return overrideFunction(pluginObj, methodName);\n} //# sourceMappingURL=cordova-function-override.js.map","map":null,"metadata":{},"sourceType":"module"}