{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as Éµngcc0 from '@angular/core';\n\nvar AdjustEvent =\n/** @class */\nfunction () {\n  function AdjustEvent(eventToken) {\n    this.callbackParameters = [];\n    this.partnerParameters = [];\n    this.eventToken = eventToken;\n  }\n\n  AdjustEvent.prototype.setRevenue = function (revenue, currency) {\n    this.revenue = revenue;\n    this.currency = currency;\n  };\n\n  AdjustEvent.prototype.addCallbackParameter = function (key, value) {\n    this.callbackParameters.push(key);\n    this.callbackParameters.push(value);\n  };\n\n  AdjustEvent.prototype.addPartnerParameter = function (key, value) {\n    this.partnerParameters.push(key);\n    this.partnerParameters.push(value);\n  };\n\n  AdjustEvent.prototype.setTransactionId = function (transactionId) {\n    this.transactionId = transactionId;\n  };\n\n  AdjustEvent.prototype.setCallbackId = function (callbackId) {\n    this.callbackId = callbackId;\n  };\n\n  return AdjustEvent;\n}();\n\nexport { AdjustEvent };\n\nvar AdjustConfig =\n/** @class */\nfunction () {\n  function AdjustConfig(appToken, environment) {\n    this.delayStart = 0.0;\n    this.logLevel = null;\n    this.defaultTracker = null;\n    this.urlStrategy = null;\n    this.externalDeviceId = null;\n    this.sendInBackground = null;\n    this.shouldLaunchDeeplink = null;\n    this.eventBufferingEnabled = null;\n    this.userAgent = null;\n    this.isDeviceKnown = null;\n    this.needsCost = null;\n    this.secretId = null;\n    this.info1 = null;\n    this.info2 = null;\n    this.info3 = null;\n    this.info4 = null;\n    this.processName = null; // Android only\n\n    this.preinstallTrackingEnabled = null; // Android only\n\n    this.preinstallFilePath = null; // Android only\n\n    this.oaidReadingEnabled = null; // Android only\n\n    this.allowiAdInfoReading = null; // iOS only\n\n    this.allowIdfaReading = null; // iOS only\n\n    this.allowAdServicesInfoReading = null; // iOS only\n\n    this.coppaCompliantEnabled = null;\n    this.playStoreKidsAppEnabled = null; // Android only\n\n    this.linkMeEnabled = null; // iOS only\n\n    this.attributionCallback = null;\n    this.eventTrackingSucceededCallback = null;\n    this.eventTrackingFailedCallback = null;\n    this.sessionTrackingSucceededCallback = null;\n    this.sessionTrackingFailedCallback = null;\n    this.deferredDeeplinkCallback = null;\n    this.conversionValueUpdatedCallback = null;\n    this.appToken = appToken;\n    this.environment = environment;\n  }\n\n  AdjustConfig.prototype.setAppSecret = function (secretId, info1, info2, info3, info4) {\n    this.secretId = secretId;\n    this.info1 = info1;\n    this.info2 = info2;\n    this.info3 = info3;\n    this.info4 = info4;\n  };\n\n  AdjustConfig.prototype.setDelayStart = function (delayStart) {\n    this.delayStart = delayStart;\n  };\n\n  AdjustConfig.prototype.setLogLevel = function (logLevel) {\n    this.logLevel = logLevel;\n  };\n\n  AdjustConfig.prototype.setDefaultTracker = function (defaultTracker) {\n    this.defaultTracker = defaultTracker;\n  };\n\n  AdjustConfig.prototype.setExternalDeviceId = function (externalDeviceId) {\n    this.externalDeviceId = externalDeviceId;\n  };\n\n  AdjustConfig.prototype.setUrlStrategy = function (urlStrategy) {\n    this.urlStrategy = urlStrategy;\n  };\n\n  AdjustConfig.prototype.setSendInBackground = function (sendInBackground) {\n    this.sendInBackground = sendInBackground;\n  };\n\n  AdjustConfig.prototype.setShouldLaunchDeeplink = function (shouldLaunchDeeplink) {\n    this.shouldLaunchDeeplink = shouldLaunchDeeplink;\n  };\n\n  AdjustConfig.prototype.setEventBufferingEnabled = function (eventBufferingEnabled) {\n    this.eventBufferingEnabled = eventBufferingEnabled;\n  };\n\n  AdjustConfig.prototype.setCoppaCompliantEnabled = function (coppaCompliantEnabled) {\n    this.coppaCompliantEnabled = coppaCompliantEnabled;\n  };\n\n  AdjustConfig.prototype.setPlayStoreKidsAppEnabled = function (playStoreKidsAppEnabled) {\n    this.playStoreKidsAppEnabled = playStoreKidsAppEnabled;\n  };\n\n  AdjustConfig.prototype.setUserAgent = function (userAgent) {\n    this.userAgent = userAgent;\n  };\n\n  AdjustConfig.prototype.setDeviceKnown = function (isDeviceKnown) {\n    this.isDeviceKnown = isDeviceKnown;\n  };\n\n  AdjustConfig.prototype.setNeedsCost = function (needsCost) {\n    this.needsCost = needsCost;\n  };\n\n  AdjustConfig.prototype.setProcessName = function (processName) {\n    this.processName = processName;\n  };\n\n  AdjustConfig.prototype.setPreinstallTrackingEnabled = function (preinstallTrackingEnabled) {\n    this.preinstallTrackingEnabled = preinstallTrackingEnabled;\n  };\n\n  AdjustConfig.prototype.setPreinstallFilePath = function (preinstallFilePath) {\n    this.preinstallFilePath = preinstallFilePath;\n  };\n\n  AdjustConfig.prototype.setOaidReadingEnabled = function (enableOaidReading) {\n    this.oaidReadingEnabled = enableOaidReading;\n  };\n\n  AdjustConfig.prototype.setAllowiAdInfoReading = function (allowiAdInfoReading) {\n    this.allowiAdInfoReading = allowiAdInfoReading;\n  };\n\n  AdjustConfig.prototype.setAllowIdfaReading = function (allowIdfaReading) {\n    this.allowIdfaReading = allowIdfaReading;\n  };\n\n  AdjustConfig.prototype.setAllowAdServicesInfoReading = function (allowAdServicesInfoReading) {\n    this.allowAdServicesInfoReading = allowAdServicesInfoReading;\n  };\n\n  AdjustConfig.prototype.setLinkMeEnabled = function (linkMeEnabled) {\n    this.linkMeEnabled = linkMeEnabled;\n  };\n\n  AdjustConfig.prototype.setAttributionCallbackListener = function (attributionCallback) {\n    this.attributionCallback = attributionCallback;\n  };\n\n  AdjustConfig.prototype.setEventTrackingSucceededCallbackListener = function (eventTrackingSucceededCallback) {\n    this.eventTrackingSucceededCallback = eventTrackingSucceededCallback;\n  };\n\n  AdjustConfig.prototype.setEventTrackingFailedCallbackListener = function (eventTrackingFailedCallback) {\n    this.eventTrackingFailedCallback = eventTrackingFailedCallback;\n  };\n\n  AdjustConfig.prototype.setSessionTrackingSucceededCallbackListener = function (sessionTrackingSucceededCallback) {\n    this.sessionTrackingSucceededCallback = sessionTrackingSucceededCallback;\n  };\n\n  AdjustConfig.prototype.setSessionTrackingFailedCallbackListener = function (sessionTrackingFailedCallback) {\n    this.sessionTrackingFailedCallback = sessionTrackingFailedCallback;\n  };\n\n  AdjustConfig.prototype.setDeferredDeeplinkCallbackListener = function (deferredDeeplinkCallback) {\n    this.deferredDeeplinkCallback = deferredDeeplinkCallback;\n  };\n\n  AdjustConfig.prototype.setConversionValueUpdatedCallbackListener = function (conversionValueUpdatedCallback) {\n    this.conversionValueUpdatedCallback = conversionValueUpdatedCallback;\n  };\n\n  AdjustConfig.prototype.getAttributionCallback = function () {\n    return this.attributionCallback;\n  };\n\n  AdjustConfig.prototype.getEventTrackingSucceededCallback = function () {\n    return this.eventTrackingSucceededCallback;\n  };\n\n  AdjustConfig.prototype.getEventTrackingFailedCallback = function () {\n    return this.eventTrackingFailedCallback;\n  };\n\n  AdjustConfig.prototype.getSessionTrackingSucceededCallback = function () {\n    return this.sessionTrackingSucceededCallback;\n  };\n\n  AdjustConfig.prototype.getSessionTrackingFailedCallback = function () {\n    return this.sessionTrackingFailedCallback;\n  };\n\n  AdjustConfig.prototype.getDeferredDeeplinkCallback = function () {\n    return this.deferredDeeplinkCallback;\n  };\n\n  AdjustConfig.prototype.getConversionValueUpdatedCallback = function () {\n    return this.conversionValueUpdatedCallback;\n  };\n\n  AdjustConfig.prototype.hasAttributionListener = function () {\n    return this.attributionCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasEventTrackingSucceededListener = function () {\n    return this.eventTrackingSucceededCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasEventTrackingFailedListener = function () {\n    return this.eventTrackingFailedCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasSessionTrackingSucceededListener = function () {\n    return this.sessionTrackingSucceededCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasSessionTrackingFailedListener = function () {\n    return this.sessionTrackingFailedCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasDeferredDeeplinkCallbackListener = function () {\n    return this.deferredDeeplinkCallback !== null;\n  };\n\n  AdjustConfig.prototype.hasConversionValueUpdatedCallbackListener = function () {\n    return this.conversionValueUpdatedCallback !== null;\n  };\n\n  return AdjustConfig;\n}();\n\nexport { AdjustConfig };\n\nvar AdjustAppStoreSubscription =\n/** @class */\nfunction () {\n  function AdjustAppStoreSubscription(price, currency, transactionId, receipt) {\n    this.callbackParameters = [];\n    this.partnerParameters = [];\n    this.price = price;\n    this.currency = currency;\n    this.transactionId = transactionId;\n    this.receipt = receipt;\n  }\n\n  AdjustAppStoreSubscription.prototype.setTransactionDate = function (transactionDate) {\n    this.transactionDate = transactionDate;\n  };\n\n  AdjustAppStoreSubscription.prototype.setSalesRegion = function (salesRegion) {\n    this.salesRegion = salesRegion;\n  };\n\n  AdjustAppStoreSubscription.prototype.addCallbackParameter = function (key, value) {\n    this.callbackParameters.push(key);\n    this.callbackParameters.push(value);\n  };\n\n  AdjustAppStoreSubscription.prototype.addPartnerParameter = function (key, value) {\n    this.partnerParameters.push(key);\n    this.partnerParameters.push(value);\n  };\n\n  return AdjustAppStoreSubscription;\n}();\n\nexport { AdjustAppStoreSubscription };\n\nvar AdjustPlayStoreSubscription =\n/** @class */\nfunction () {\n  function AdjustPlayStoreSubscription(price, currency, sku, orderId, signature, purchaseToken) {\n    this.callbackParameters = [];\n    this.partnerParameters = [];\n    this.price = price;\n    this.currency = currency;\n    this.sku = sku;\n    this.orderId = orderId;\n    this.signature = signature;\n    this.purchaseToken = purchaseToken;\n  }\n\n  AdjustPlayStoreSubscription.prototype.setPurchaseTime = function (purchaseTime) {\n    this.purchaseTime = purchaseTime;\n  };\n\n  AdjustPlayStoreSubscription.prototype.addCallbackParameter = function (key, value) {\n    this.callbackParameters.push(key);\n    this.callbackParameters.push(value);\n  };\n\n  AdjustPlayStoreSubscription.prototype.addPartnerParameter = function (key, value) {\n    this.partnerParameters.push(key);\n    this.partnerParameters.push(value);\n  };\n\n  return AdjustPlayStoreSubscription;\n}();\n\nexport { AdjustPlayStoreSubscription };\n\nvar AdjustThirdPartySharing =\n/** @class */\nfunction () {\n  function AdjustThirdPartySharing(isEnabled) {\n    this.granularOptions = [];\n    this.partnerSharingSettings = [];\n    this.isEnabled = isEnabled;\n  }\n\n  AdjustThirdPartySharing.prototype.addGranularOption = function (partnerName, key, value) {\n    this.granularOptions.push(partnerName);\n    this.granularOptions.push(key);\n    this.granularOptions.push(value);\n  };\n\n  AdjustThirdPartySharing.prototype.addPartnerSharingSetting = function (partnerName, key, value) {\n    this.partnerSharingSettings.push(partnerName);\n    this.partnerSharingSettings.push(key);\n    this.partnerSharingSettings.push(value);\n  };\n\n  return AdjustThirdPartySharing;\n}();\n\nexport { AdjustThirdPartySharing };\n\nvar AdjustAdRevenue =\n/** @class */\nfunction () {\n  function AdjustAdRevenue(source) {\n    this.callbackParameters = [];\n    this.partnerParameters = [];\n    this.source = source;\n  }\n\n  AdjustAdRevenue.prototype.setRevenue = function (revenue, currency) {\n    this.revenue = revenue;\n    this.currency = currency;\n  };\n\n  AdjustAdRevenue.prototype.addCallbackParameter = function (key, value) {\n    this.callbackParameters.push(key);\n    this.callbackParameters.push(value);\n  };\n\n  AdjustAdRevenue.prototype.addPartnerParameter = function (key, value) {\n    this.partnerParameters.push(key);\n    this.partnerParameters.push(value);\n  };\n\n  AdjustAdRevenue.prototype.setAdImpressionsCount = function (adImpressionsCount) {\n    this.adImpressionsCount = adImpressionsCount;\n  };\n\n  AdjustAdRevenue.prototype.setAdRevenueNetwork = function (adRevenueNetwork) {\n    this.adRevenueNetwork = adRevenueNetwork;\n  };\n\n  AdjustAdRevenue.prototype.setAdRevenueUnit = function (adRevenueUnit) {\n    this.adRevenueUnit = adRevenueUnit;\n  };\n\n  AdjustAdRevenue.prototype.setAdRevenuePlacement = function (adRevenuePlacement) {\n    this.adRevenuePlacement = adRevenuePlacement;\n  };\n\n  return AdjustAdRevenue;\n}();\n\nexport { AdjustAdRevenue };\nexport var AdjustEnvironment = /*#__PURE__*/(() => {\n  (function (AdjustEnvironment) {\n    AdjustEnvironment[\"Sandbox\"] = \"sandbox\";\n    AdjustEnvironment[\"Production\"] = \"production\";\n  })(AdjustEnvironment || (AdjustEnvironment = {}));\n\n  return AdjustEnvironment;\n})();\nexport var AdjustLogLevel = /*#__PURE__*/(() => {\n  (function (AdjustLogLevel) {\n    AdjustLogLevel[\"Verbose\"] = \"VERBOSE\";\n    AdjustLogLevel[\"Debug\"] = \"DEBUG\";\n    AdjustLogLevel[\"Info\"] = \"INFO\";\n    AdjustLogLevel[\"Warn\"] = \"WARN\";\n    AdjustLogLevel[\"Error\"] = \"ERROR\";\n    AdjustLogLevel[\"Assert\"] = \"ASSERT\";\n    AdjustLogLevel[\"Suppress\"] = \"SUPPRESS\";\n  })(AdjustLogLevel || (AdjustLogLevel = {}));\n\n  return AdjustLogLevel;\n})();\nexport var AdjustUrlStrategy = /*#__PURE__*/(() => {\n  (function (AdjustUrlStrategy) {\n    AdjustUrlStrategy[\"India\"] = \"india\";\n    AdjustUrlStrategy[\"China\"] = \"china\";\n    AdjustUrlStrategy[\"DataResidencyEU\"] = \"data-residency-eu\";\n    AdjustUrlStrategy[\"DataResidencyTR\"] = \"data-residency-tr\";\n    AdjustUrlStrategy[\"DataResidencyUS\"] = \"data-residency-us\";\n  })(AdjustUrlStrategy || (AdjustUrlStrategy = {}));\n\n  return AdjustUrlStrategy;\n})();\nexport var AdjustAdRevenueSource = /*#__PURE__*/(() => {\n  (function (AdjustAdRevenueSource) {\n    AdjustAdRevenueSource[\"AdRevenueSourceAppLovinMAX\"] = \"applovin_max_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourceMopub\"] = \"mopub\";\n    AdjustAdRevenueSource[\"AdRevenueSourceAdMob\"] = \"admob_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourceIronSource\"] = \"ironsource_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourceAdMost\"] = \"admost_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourceUnity\"] = \"unity_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourceHeliumChartboost\"] = \"helium_chartboost_sdk\";\n    AdjustAdRevenueSource[\"AdRevenueSourcePublisher\"] = \"publisher_sdk\";\n  })(AdjustAdRevenueSource || (AdjustAdRevenueSource = {}));\n\n  return AdjustAdRevenueSource;\n})();\n\nvar Adjust =\n/** @class */\nfunction (_super) {\n  __extends(Adjust, _super);\n\n  function Adjust() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Adjust.prototype.create = function (config) {\n    return cordova(this, \"create\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackEvent = function (event) {\n    return cordova(this, \"trackEvent\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackAppStoreSubscription = function (subscription) {\n    return cordova(this, \"trackAppStoreSubscription\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackPlayStoreSubscription = function (subscription) {\n    return cordova(this, \"trackPlayStoreSubscription\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackThirdPartySharing = function (thirdPartySharing) {\n    return cordova(this, \"trackThirdPartySharing\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackAdRevenue = function (sourceOrAdRevenue, payload) {\n    return cordova(this, \"trackAdRevenue\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.trackMeasurementConsent = function (measurementConsent) {\n    return cordova(this, \"trackMeasurementConsent\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.setOfflineMode = function (enabled) {\n    return cordova(this, \"setOfflineMode\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.appWillOpenUrl = function (url) {\n    return cordova(this, \"appWillOpenUrl\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.setEnabled = function (enabled) {\n    return cordova(this, \"setEnabled\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.setPushToken = function (pushToken) {\n    return cordova(this, \"setPushToken\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.isEnabled = function () {\n    return cordova(this, \"isEnabled\", {}, arguments);\n  };\n\n  Adjust.prototype.gdprForgetMe = function () {\n    return cordova(this, \"gdprForgetMe\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.disableThirdPartySharing = function () {\n    return cordova(this, \"disableThirdPartySharing\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.getGoogleAdId = function () {\n    return cordova(this, \"getGoogleAdId\", {}, arguments);\n  };\n\n  Adjust.prototype.getAmazonAdId = function () {\n    return cordova(this, \"getAmazonAdId\", {}, arguments);\n  };\n\n  Adjust.prototype.getIdfa = function () {\n    return cordova(this, \"getIdfa\", {}, arguments);\n  };\n\n  Adjust.prototype.getAdid = function () {\n    return cordova(this, \"getAdid\", {}, arguments);\n  };\n\n  Adjust.prototype.checkForNewAttStatus = function () {\n    return cordova(this, \"checkForNewAttStatus\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.getAttribution = function () {\n    return cordova(this, \"getAttribution\", {}, arguments);\n  };\n\n  Adjust.prototype.getSdkVersion = function () {\n    return cordova(this, \"getSdkVersion\", {}, arguments);\n  };\n\n  Adjust.prototype.addSessionCallbackParameter = function (key, value) {\n    return cordova(this, \"addSessionCallbackParameter\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.removeSessionCallbackParameter = function (key) {\n    return cordova(this, \"removeSessionCallbackParameter\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.resetSessionCallbackParameters = function () {\n    return cordova(this, \"resetSessionCallbackParameters\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.addSessionPartnerParameter = function (key, value) {\n    return cordova(this, \"addSessionPartnerParameter\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.removeSessionPartnerParameter = function (key) {\n    return cordova(this, \"removeSessionPartnerParameter\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.resetSessionPartnerParameters = function () {\n    return cordova(this, \"resetSessionPartnerParameters\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.sendFirstPackages = function () {\n    return cordova(this, \"sendFirstPackages\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.requestTrackingAuthorizationWithCompletionHandler = function () {\n    return cordova(this, \"requestTrackingAuthorizationWithCompletionHandler\", {}, arguments);\n  };\n\n  Adjust.prototype.updateConversionValue = function (conversionValue) {\n    return cordova(this, \"updateConversionValue\", {\n      \"sync\": true\n    }, arguments);\n  };\n\n  Adjust.prototype.getAppTrackingAuthorizationStatus = function () {\n    return cordova(this, \"getAppTrackingAuthorizationStatus\", {}, arguments);\n  };\n\n  Adjust.prototype.getLastDeeplink = function () {\n    return cordova(this, \"getLastDeeplink\", {}, arguments);\n  };\n\n  Adjust.pluginName = \"Adjust\";\n  Adjust.plugin = \"com.adjust.sdk\";\n  Adjust.pluginRef = \"Adjust\";\n  Adjust.repo = \"https://github.com/adjust/cordova_sdk\";\n  Adjust.platforms = [\"Android\", \"iOS\"];\n\n  Adjust.Éµfac = /*@__PURE__*/function () {\n    var ÉµAdjust_BaseFactory;\n    return function Adjust_Factory(t) {\n      return (ÉµAdjust_BaseFactory || (ÉµAdjust_BaseFactory = Éµngcc0.ÉµÉµgetInheritedFactory(Adjust)))(t || Adjust);\n    };\n  }();\n\n  Adjust.Éµprov = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjectable({\n    token: Adjust,\n    factory: function (t) {\n      return Adjust.Éµfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return Adjust;\n}(AwesomeCordovaNativePlugin);\n\nexport { Adjust }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}